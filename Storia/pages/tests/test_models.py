import pytest
from mixer.backend.django import mixer
from pages.models import media_upload_handler
pytestmark = pytest.mark.django_db


class TestMedia:
    def test_init(self):
        file = mixer.blend('pages.Media')
        assert file.pk == 1, 'Need to save an instance.'

    def test__str__(self):
        file = mixer.blend('pages.Media')
        assert str(file) == file.name, 'str must be name'
        assert str(file) != None, 'must return something'
        assert isinstance(str(file), str) == True, 'must return a string'

    def test_media_upload_handler(self):
        page = mixer.blend('pages.Page', name='flies')
        media = mixer.blend('pages.Media', page=page)
        result = media_upload_handler(instance=media, filename='test.jpg')
        assert isinstance(result, str) is True, 'must return a string'
        assert result == "flies/test.jpg", 'incorrect path generated by handler.'






class TestPage:
    def test_init(self):
        file = mixer.blend('pages.Page')
        assert file.pk ==1, 'Need to save an instance.'

    def test__str__(self):
        file = mixer.blend('pages.Page')
        assert str(file) == file.name, 'str must be name'
        assert str(file) != None, 'must return something'
        assert isinstance(str(file), str) == True, 'must return a string'

